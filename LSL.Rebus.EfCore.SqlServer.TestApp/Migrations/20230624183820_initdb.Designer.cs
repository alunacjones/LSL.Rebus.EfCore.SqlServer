// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LSL.Rebus.EfCore.SqlServer.TestApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230624183820_initdb")]
    partial class initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SagaIndexes", b =>
                {
                    b.Property<string>("key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("value")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("saga_type")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("saga_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("key", "value", "saga_type");

                    b.HasIndex("saga_id")
                        .IsUnique();

                    b.ToTable("SagaIndexes");
                });

            modelBuilder.Entity("Sagas", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("revision")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Sagas");
                });

            modelBuilder.Entity("SagaIndexes", b =>
                {
                    b.HasOne("Sagas", "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilderToMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder")
                        .WithOne()
                        .HasForeignKey("SagaIndexes", "saga_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilderToMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder");
                });
#pragma warning restore 612, 618
        }
    }
}
